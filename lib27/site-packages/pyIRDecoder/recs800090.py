# -*- coding: utf-8 -*-
#
# ***********************************************************************************
# MIT License
#
# Copyright (c) 2020 Kevin G. Schlosser
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is furnished
# to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# ***********************************************************************************

# Local imports
from . import recs800045
from . import protocol_base

TIMING = 158


class RECS800090(recs800045.RECS800045.__class__):
    """
    IR decoder for the RECS800068 protocol.
    """
    irp = '{0k,158,msb}<1,-31|1,-47>(1:1,T:1,D:3,F:6,1,^138m)*'
    frequency = 0

    _lead_out = [TIMING, 138000]
    _bursts = [[TIMING, -TIMING * 31], [TIMING, -TIMING * 47]]

    # noinspection PyMethodOverriding
    def _test_decode(self):
        rlc = [[
            +158, -7426, +158, -4898, +158, -7426, +158, -4898, +158, -7426, +158, -7426, +158, -7426, +158, -7426,
            +158, -4898, +158, -4898, +158, -7426, +158, -64530
        ]]

        params = [dict(function=57, device=5)]

        # noinspection PyTypeChecker,PyCallByClass,PyProtectedMember
        return protocol_base.IrProtocolBase._test_decode(self, rlc, params)


RECS800090 = RECS800090()
