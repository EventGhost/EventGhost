# In AppVeyor's web config add an enviremont variable named GITHUB_TOKEN.
# Set it to a token you've created on GitHub.
# To draft a release on GitHub with AppVeyor, create a tag on master.


version: '{build}-{branch}'


#init:
#  # Enable Remotedesktop and pause the build execution
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))


environment:
  PYTHON: 'C:\Stackless27'
  PYTHONPATH: 'C:\Stackless27;C:\Stackless27\Scripts;C:\Stackless27\DLLs;C:\Stackless27\Lib;C:\Stackless27\Lib\site-packages;'


matrix:
  fast_finish: true


cache:
  # Invalidate cache if .appveyor.yml has changed
  - C:\Stackless27 -> .appveyor.yml
  # Manually clear cache:
  # from agithub.AppVeyor import AppVeyor
  # ci = AppVeyor(<your appveyor API token>)
  # status, data = ci.api.projects.<appveyor username>.<appveyor projectname>.buildcache.delete()
  # print status  # 204 = Ok, cache deleted


install:
  # HTML Help Workshop 1.32
  # - cinst html-help-workshop

  # Microsoft Visual C++ Redistributable 2008 (version min: 9.0.21022.8)
  # - cinst vcredist2008

  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - ps: |
      $Env:PATH = $Env:PATH -replace "Python27", "Stackless27"
      $PythonFolder = $Env:PYTHON
      $PythonScripts = $PythonFolder + "\Scripts"
      $SitePackages = $PythonFolder + "\lib\site-packages"
      $SysWOW = $Env:SYSTEMROOT + "\SysWOW64"
      $PythonWindowsDLL = $SysWOW + "\python27.dll"
      $PythonDLL = $PythonFolder + "\python27.dll"
      $InstallersFolder = $Env:APPVEYOR_BUILD_FOLDER + "\_build\installers\"

      Remove-Item $PythonWindowsDLL
      New-Item $InstallersFolder -type directory | Out-Null
      " "
      "=============== prepare EventGhost build environment ==============="
      If (-not (Test-Path $PythonFolder))
      {

        "--- Stackless 2.7.12150 x86"
        $StacklessInstaller = $InstallersFolder + "python-2.7.12150-stackless.msi"
        $StacklessInstallDir = "TARGETDIR=" + $PythonFolder
        $StacklessURL = "http://www.stackless.com/binaries/python-2.7.12150-stackless.msi"
        Start-FileDownload $StacklessURL -Timeout 60000 -FileName $StacklessInstaller
        "    Installing..."
        Start-Process MsiExec.exe -Arg "/I $StacklessInstaller /quiet /passive /qn /norestart $StacklessInstallDir" -Wait
        "    Done."
        " "
      }
      "=============== start the EventGhost build ==============="
      " "
      If ($Env:APPVEYOR_REPO_TAG.tolower() -eq "true" -and
        $Env:APPVEYOR_REPO_TAG_NAME.tolower().startswith("deploy"))
      {
        # to do a release, create a tag in the form "Deploy_VERSION"
        # VERSION must be a valid version string (without leading 'v')
        # this tag will be deleted and a new release "vVERSION" created.
        git checkout -q master
        $release = $Env:APPVEYOR_REPO_TAG_NAME.split("_", 2)[1]
        $url = if($Env:SFTP_URL){' --docs --url "' + $env:SFTP_URL + '"'} else {''}
        python "_build\Build.py" --build --install --package --release --version $release $url
      } Else {
        # WIP
        python "_build\Build.py" --build --install --package
        .\EventGhost.exe -install
      }
      $Env:SetupExe = gci -recurse -filter "_build\output\*Setup.exe" -name

      # update the appveyor build version to be the same as the EventGhost version
      $start = $env:SetupExe.IndexOf("_")
      $length = $env:SetupExe.LastIndexOf("_") - $start
      $build_version = $env:SetupExe.Substring($start + 1, $length - 1)
      Update-AppveyorBuild -Version "$build_version"

      # Make sure the appveyor cache is only saved if our build was successfull
      If (-Not (Test-Path(".\EventGhost.exe"))) {$env:APPVEYOR_CACHE_SKIP_SAVE = "true"}

      " "

      "=============== EventGhost build finished ==============="
      " "
      " "


build:
  off
  # If we don't turn build off, we get an error from appveyor telling us,
  # we should decide, which project or solution file to use, because the
  # folder contains more than one project or solution file.
  # We don't really "build" (with a compiler), but Appveyor finds the
  # solution files in the extension sub-directories and complains.


#after_test:
#  - cmd:  echo "=============== EventGhost build finished ==============="
#  # - cmd: START /WAIT %setup-exe% /VERYSILENT /SUPPRESSMSGBOXES /NOCLOSEAPPLICATIONS


artifacts:
  - path: _build\output\$(SetupExe)
    name: $(SetupExe)
  - path: _build\output\Build.log
    name: Build.log
  - path: _build\output\CHANGELOG.md
    name: CHANGELOG.md
  - path: _build\output\CHANGELOG_THIS_RELEASE.md
    name: CHANGELOG_THIS_RELEASE.md
  - path: _build\output\CHANGELOG_THIS_RELEASE.bb
    name: CHANGELOG_THIS_RELEASE.bb


notifications:
- provider: GitHubPullRequest
  template: >-
    [{{buildVersion}} {{status}}]({{buildUrl}}) (commit {{commitUrl}})

    Artifacts:

    {{#jobs}}
    {{#artifacts}}
    [{{name}}]({{permalink}})

    {{/artifacts}}
    {{/jobs}}

  on_build_success: true
  on_build_failure: true
  on_build_status_changed: false

- provider: Slack
  incoming_webhook:
    secure: DXo21MuJufndeGjaRDMxLgLo5yEaPf9uYg1YqrHPlfjsXUAzxRR2yGhCKcUwfLTT3gO192GKwkNAc52Y6TnxuKsNAgI+K5mBW40+6I9FOmU=

  template: >-
    <{{buildUrl}}|{{projectName}} {{buildVersion}} {{status}}>

    Commit <{{commitUrl}}|{{commitId}}> by {{commitAuthor}} on {{commitDate}}:

    Commit message: _{{commitMessage}}_


    Artifacts:

    {{#jobs}}{{#artifacts}}<{{permalink}}|{{name}}>

    {{/artifacts}}{{/jobs}}

  on_build_success: true
  on_build_failure: true
  on_build_status_changed: true



#on_finish:
#  # Enable Remotedesktop and pause the build execution
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))


# notifications:
#   - provider: GitHubPullRequest
#     template: "{{#passed}}:white_check_mark: [Setup.exe](https://ci.appveyor.com/api/buildjobs/$(APPVEYOR_JOB_ID)/artifacts/_build%2Foutput%2F$(setup-exe)){{/passed}}{{#failed}}:x:{{/failed}} [Build {{&projectName}} {{buildVersion}} {{status}}]({{buildUrl}}) (commit {{commitUrl}} by @{{&commitAuthorUsername}})"
