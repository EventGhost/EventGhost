# In AppVeyor's web config add an enviremont variable named GITHUB_TOKEN.
# Set it to a token you've created on GitHub.
# To draft a release on GitHub with AppVeyor, create a tag on master.


# *****************************************************************************
# *                                                                           *
# *                              READ ME!!!                                   *
# *                                                                           *
# *****************************************************************************
#
#
# =============================== PROBLEMS ====================================
#
# python <3 - C-Python or Stackless you can only have a single copy
#             of that version of python installed on a machine. The issue with
#             the installer is that it does not launch the uninstaller for the
#             version that is already installed. It simply iterates the
#             installation folder and deletes the files for the currently
#             installed version. It does this without ever telling you that it
#             is and it does not do a CRC check against the installed files
#             before removing them. So if you have any modified core python
#             files be warned.. It does not care. It will delete them without
#             notice.
#
#             The big problem with this process is that it does not remove
#             any entries in the registry for the old installation. and it
#             adds entries for the new installation below them. This causes
#             any installers that do a search for python installations to
#             always select the wrong one. Now under normal situations an
#             installer would iterate the list of possible installations and
#             verify if it is there or not.. But because Python 2.7 is only
#             supposed to have a single installed copy why would the author
#             do this?? They wouldn't. they would rely on there being only a
#             single installation listed in the registry.
#
# py2xe_py2 - does not have a pypi dist available for python 2.7 x64
#             so for sake of keeping the code symmetrical both the x86 and x64
#             use the executable that gets downloaded.
#             the installer for py2exe_py2 does not detect installed python
#             version properly because of the bug mentioned above.
#
#
# x86 - x64 - The second portion of the multiple Python 2.7 installations
#             dilemma. we need to install an x86 and an x64 variant at the
#             same time. I know there is a way to have the appveyor build run
#             2 times. I have not investigated this fully as of yet.
#
#
# ========================== SOLUTIONS / HACKS ================================
#
# py2xe_py2 - this is a fix for the above issue.
#             since the executable was created using distutils we can use
#             easy_install to install the library. There is a single glitch
#             with it There is some kind of a warning/error that gets printed
#             out. Tho it does not affect the installation it does produce the
#             undesirable red in the powershell log.
#
# x86 - x64 - How we get around this is we relocate the python installations
#             after installing everything needed. we also move the python dll
#             file from SysWOW or System to the installations folder.
#             we do not want an entry in the registry pointing to a current
#             python installation that we intend to use. When we install the
#             second variant if the first is found it will be deleted. So we
#             have to play a little bit of hide and seek with the python
#             installations. That is why you will see all of the moving and
#             copying of files.
#
#
# =============================== CHANGES =====================================
#
# *REMOVED*
# ctypeslib - This is a non functioning package due to
#             components that are required by the library and are no longer
#             available. The only thing this module was ever used for was the
#             creation of eg.WinApi.Dynamic module.
#             Microsoft has not changed any of the API for any of the
#             constants/functions located in this file since their creation in
#             Windows XP. I do not forsee them making any changes because of
#             how long this API has been in place. So the need for ctypeslib
#             (even if it did function) is no longer needed.
# *REMOVED*
# pycrypto  - this library is no longer being maintained. has been replaced
#
# *ADDED*
# pycryptodome - pycrypto replacement. most of the same API. It is a maintained
#                fork of pycrypto
#
# *MOVED*
# build process - I moved the building of EG out of the install section of
#                 appveyor. I did this because of the incorrect build
#                 completion notifications. There is a build_script section
#                 that can be used in replacement of build. this section
#                 does not do a VS solution scan and it also properly reports
#                 the status of the build. the install section is not monitored
#                 for application status codes properly. and the use of
#                 fast_finish i believe only works on the build/build_script
#                 sections
#
#
# *****************************************************************************
# *****************************************************************************

image:
  - Visual Studio 2015

version: '{build}-{branch}'

environment:
  DEBUG: 0
  # DISTUTILS_DEBUG: 1
  # APPVEYOR_RDP_PASSWORD: HGtoDr16GH~
  matrix:

    - BUILDARCH: 64
    - BUILDARCH: 86

init:
  # Enable Remotedesktop and pause the build execution
  - ps: |
      if ($Env:DEBUG -eq "1") {
          $blockRdp = $true
          iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
      }

matrix:
  fast_finish: true


cache:
  # Invalidate cache if .appveyor.yml has changed
  - C:\Stackless27_x$(BUILDARCH) -> .appveyor.yml, .appveyor_install.ps1, .appveyor_build.ps1, .appveyor_runapp.psm1
  # Manually clear cache:
  # from agithub.AppVeyor import AppVeyor
  # ci = AppVeyor(<your appveyor API token>)
  # status, data = ci.api.projects.<appveyor username>.<appveyor projectname>.buildcache.delete()
  # print status  # 204 = Ok, cache deleted


install:
  # HTML Help Workshop 1.32
  - cinst html-help-workshop

  # Microsoft Visual C++ Redistributable 2008 (version min: 9.0.21022.8)
  # - cinst vcredist2008

  - ps: . .\.appveyor_install.ps1



build_script:
  - ps: . .\.appveyor_build.ps1

#after_test:
#  - cmd:  echo "=============== EventGhost build finished ==============="
#  # - cmd: START /WAIT %setup-exe% /VERYSILENT /SUPPRESSMSGBOXES /NOCLOSEAPPLICATIONS

artifacts:
  - path: _build\output\CHANGELOG.md
    name: CHANGELOG.md
  - path: _build\output\CHANGELOG_THIS_RELEASE.md
    name: CHANGELOG_THIS_RELEASE.md
  - path: _build\output\CHANGELOG_THIS_RELEASE.bb
    name: CHANGELOG_THIS_RELEASE.bb
  - path: _build\output\$(SetupExe)
    name: $(SetupExe)
  - path: _build\output\Build_x$(BUILDARCH).log
    name: Build_x$(BUILDARCH).log
  - path: _build\output\ModuleOutput_x$(BUILDARCH).zip
    name: ModuleOutput_x$(BUILDARCH).zip


notifications:
- provider: GitHubPullRequest
  template: >-
    [{{buildVersion}} {{status}}]({{buildUrl}}) (commit {{commitUrl}})

    Artifacts:

    {{#jobs}}
    {{#artifacts}}
    [{{name}}]({{permalink}})

    {{/artifacts}}
    {{/jobs}}

  on_build_success: true
  on_build_failure: true
  on_build_status_changed: false

- provider: Slack
  incoming_webhook:
    secure: DXo21MuJufndeGjaRDMxLgLo5yEaPf9uYg1YqrHPlfjsXUAzxRR2yGhCKcUwfLTT3gO192GKwkNAc52Y6TnxuKsNAgI+K5mBW40+6I9FOmU=

  template: >-
    <{{buildUrl}}|{{projectName}} {{buildVersion}} {{status}}>

    Commit <{{commitUrl}}|{{commitId}}> by {{commitAuthor}} on {{commitDate}}:

    Commit message: _{{commitMessage}}_


    Artifacts:

    {{#jobs}}{{#artifacts}}<{{permalink}}|{{name}}>

    {{/artifacts}}{{/jobs}}

  on_build_success: true
  on_build_failure: true
  on_build_status_changed: true


on_finish:
  # pause the build execution
  - ps: |
      if ($Env:DEBUG -eq "1") {
          $blockRdp = $true
          iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
      }

# notifications:
#   - provider: GitHubPullRequest
#     template: "{{#passed}}:white_check_mark: [Setup.exe](https://ci.appveyor.com/api/buildjobs/$(APPVEYOR_JOB_ID)/artifacts/_build%2Foutput%2F$(setup-exe)){{/passed}}{{#failed}}:x:{{/failed}} [Build {{&projectName}} {{buildVersion}} {{status}}]({{buildUrl}}) (commit {{commitUrl}} by @{{&commitAuthorUsername}})"
